AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Specification template describing your function.

Globals:
  Function:
    Timeout: 10
    Architectures:
      - arm64
    Runtime: python3.9
    MemorySize: 256

Resources:
  SignUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Authentication/
      Handler: SignUp.lambda_handler
      Layers:
        - !Ref ExceptionsLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonCognitoPowerUser
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /authentication/signup
            Method: post

  SignInFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Authentication/
      Handler: SignIn.lambda_handler
      Layers:
        - !Ref ExceptionsLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonCognitoPowerUser
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /authentication/signin
            Method: post

  VerifyConfirmationCodeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Authentication/
      Handler: VerifyConfirmationCode.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonCognitoPowerUser
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /authentication/verifyconfirmationcode
            Method: post

  ForgotPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Authentication/
      Handler: ForgotPassword.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonCognitoPowerUser
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /authentication/forgotpassword
            Method: post

  ConfirmForgotPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Authentication/
      Handler: ConfirmForgotPassword.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonCognitoPowerUser
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /authentication/confirmforgotpassword
            Method: post

  InitiateEmailVerificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Authentication/
      Handler: InitiateEmailVerification.lambda_handler
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendEmail'
                - 'ses:SendRawEmail'
              Resource: '*'
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Layers:
        - !Ref DatabaseLayer
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /authentication/initiateemailverification
            Method: post

  ConfirmEmailVerificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Authentication/
      Handler: ConfirmEmailVerification.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
        - AmazonCognitoPowerUser
      Layers:
        - !Ref DatabaseLayer
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /authentication/confirmemailverification
            Method: post

  ResendConfirmationCodeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Authentication/
      Handler: ResendConfirmationCode.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
        - AmazonCognitoPowerUser
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /authentication/resendconfirmationcode
            Method: post

  GetEventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Search/
      Handler: SearchLambdas.get_events
      Layers:
        - !Ref ExceptionsLayer
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /search/events
            Method: get
      MemorySize: 750

  GetVenuesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Search/
      Handler: SearchLambdas.get_venues
      Layers:
        - !Ref ExceptionsLayer
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /search/venues
            Method: get

  GetOrganisersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Search/
      Handler: SearchLambdas.get_organisers
      Layers:
        - !Ref ExceptionsLayer
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /search/organisers
            Method: get

  GetEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Search/
      Handler: GetSpecificLambdas.get_event
      Layers:
        - !Ref ExceptionsLayer
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /search/event/{event_id}
            Method: get
      MemorySize: 512
      Timeout: 20

  GetOrganiserEventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Search/
      Handler: GetSpecificLambdas.get_organiser_events
      Layers:
        - !Ref ExceptionsLayer
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /search/organiser
            Method: get
      MemorySize: 1024

  GetVenueEventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Search/
      Handler: GetSpecificLambdas.get_venue_events
      Layers:
        - !Ref ExceptionsLayer
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /search/venue/{venue_id}
            Method: get
      MemorySize: 1024

  ReserveListingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Listings/Reserve/
      Handler: CreateReservation.lambda_handler
      Layers:
        - !Ref ExceptionsLayer
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /listings/reserve
            Method: post
      MemorySize: 2048

  FulfillListingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Listings
      Handler: FulfillListing.lambda_handler
      Layers:
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /listings/fulfill
            Method: post

  VerifyTransferUrl:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Fixr
      Handler: VerifyTransferUrl.lambda_handler
      Layers:
        - !Ref ExceptionsLayer
        - !Ref FixrLayer
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /transfers/verifyurl
            Method: post

  PostListingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Listings
      Handler: PostListing.lambda_handler
      Layers:
        - !Ref DatabaseLayer
        - !Ref FixrLayer
        - !Ref ExceptionsLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /listing
            Method: post

  RemoveListingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Listings
      Handler: DeleteListing.lambda_handler
      Layers:
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /listing
            Method: delete

  EditListingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Listings
      Handler: EditListing.lambda_handler
      Layers:
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /listing
            Method: put

  RelistListingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Listings
      Handler: Relist.lambda_handler
      Layers:
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /listing/relist
            Method: put

  GetPurchasesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Listings
      Handler: GetPurchases.lambda_handler
      Layers:
        - !Ref DatabaseLayer
        - !Ref FixrLayer
        - !Ref ExceptionsLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /purchases
            Method: get

  GetListingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Listings
      Handler: GetListings.lambda_handler
      Layers:
        - !Ref DatabaseLayer
        - !Ref FixrLayer
        - !Ref ExceptionsLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /listings
            Method: get

  CheckListingEditableFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Listings
      Handler: CheckListingEditable.lambda_handler
      Layers:
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /CheckListingEditable/{ask_id}
            Method: get

  GetTransferUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Transfer
      Handler: GetTransferUrl.lambda_handler
      Layers:
        - !Ref DatabaseLayer
        - !Ref FixrLayer
        - !Ref ExceptionsLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /transfers/{ask_id}
            Method: post

  PostPaymentSheetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Payments
      Handler: PaymentSheet.lambda_handler
      Layers:
        - !Ref DatabaseLayer
        - !Ref ExceptionsLayer
        - !Ref FixrLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /payment-sheet
            Method: post
      MemorySize: 512

  CheckUserConnectedAccount:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Payments
      Handler: CheckConnectedAccount.lambda_handler
      Layers:
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /CheckUserConnectedAccount
            Method: post

  CreateConnectedAccount:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Payments
      Handler: CreateConnectedAccount.lambda_handler
      Layers:
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /CreateConnectedAccount
            Method: post
      MemorySize: 300

  GetFeesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/Payments
      Handler: GetFees.lambda_handler
      Layers:
        - !Ref DatabaseLayer
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /fees
            Method: get

  PdfBucket:
    Type: AWS::S3::Bucket

  UploadPdfFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: upload_pdf.lambda_handler
      CodeUri: src/utils  # Assuming Lambda code is in the root directory with the template
      Description: Uploads a PDF to S3.
      Environment:
        Variables:
          BUCKET_NAME: !Ref PdfBucket
      Policies:
        - AmazonS3FullAccess
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /pdf/upload
            Method: post

  RetrievePdfFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: retrieve_pdf.lambda_handler
      CodeUri: src/utils
      Description: Retrieves a PDF URL from S3.
      Environment:
        Variables:
          BUCKET_NAME: !Ref PdfBucket
      Policies:
        - AmazonS3FullAccess
      Events:
        TicketstarApi:
          Type: Api
          Properties:
            Path: /pdf/download
            Method: get

  ExceptionsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: ExceptionsLayer
      Description: Lambda layer for exceptions
      ContentUri: layers/Exceptions/
      CompatibleRuntimes:
        - python3.9
  DatabaseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: DatabaseLayer
      Description: Contains database functions and exceptions
      ContentUri: layers/Database
      CompatibleRuntimes:
        - python3.9
  FixrLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: FixrLayer
      Description: contains functions and classes for dealing with fixr
      ContentUri: layers/FixrFunctions
      CompatibleRuntimes:
        - python3.9

Outputs:
  TicketstarApi:
    Description: "API Gateway endpoint URL for Prod stage for ticketstar function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
